allprojects {

    version = '00.00.01'
    repositories {

        mavenCentral()
        jcenter()

        maven {
        url 'https://dist.wso2.org/maven2/'
        }

        maven {
            url 'https://maven.repository.redhat.com/ga/'
        }

        maven {
            url 'https://repo.spring.io/libs-release/'
        }
    }
}

apply plugin: 'java-library'


configurations {
  childJars
}

jar {
    archiveBaseName = "TestPlugin"
    from "test_eclipse/plugin.xml"
    dependsOn configurations.childJars
    from { configurations.childJars.collect { zipTree(it) } }



    from 
    {
        subprojects.collect ({"${it.buildDir}/classes/java/main"})
    } include ("**/*.class")

    // from 
    // {
        // project(":cmdline_tester").configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    // }

    eachFile ( {FileCopyDetails fcd ->
    println fcd
    })
    
    manifest {
        attributes (
            'Manifest-Version': '1.0',
            'Require-Bundle': 'org.eclipse.ui,org.eclipse.core.runtime',
            'Bundle-ActivationPolicy': 'lazy',
            'Bundle-ManifestVersion': '2',
            'Bundle-Name': 'HelloWorld',
            'Bundle-Version': project.version,
            'Bundle-RequiredExecutionEnvironment': 'JavaSE-1.8',
            'Bundle-Activator': 'com.checkmarx.plugin.eclipse.HelloWorld',
            'Bundle-SymbolicName': 'HelloWorldMenu; singleton:=true',
            'Main-Class' : 'com.checkmarx.CmdTest'
        )
    }
}

dependencies {

    implementation project(":test_eclipse"), project (":cmdline_tester")
    subprojects.each {
        childJars project(it.path)
    }

}



